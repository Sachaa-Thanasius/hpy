[build-system]
requires = ["setuptools>=64.0", "setuptools-scm[toml]>=6.0", "wheel>=0.34.2"]
build-backend = "setuptools.build_meta"

[project]
name = "hpy"
dynamic = ["version"]
description = "A better C API for Python"
readme = { file = "README.md", content-type = "text/markdown" }
requires-python = ">=3.8"
license = { file = "LICENSE" }
authors = [{ name = "The HPy team", email = "hpy-dev@python.org" }]

[project.optional-dependencies]
dev = ["pytest", "pytest-xdist", "filelock"]

[project.urls]
Homepage = "https://hpyproject.org"
Documentation = "https://docs.hpyproject.org/en/latest"
Repository = "https://github.com/hpyproject/hpy"
Issues = "https://github.com/hpyproject/hpy/issues"
Changelog = "https://docs.hpyproject.org/en/latest/changelog.html"

[project.entry-points."distutils.setup_keywords"]
hpy_ext_modules = "hpy.devel:handle_hpy_ext_modules"

[tool.setuptools_scm]

[tool.setuptools]
packages = ["hpy.devel", 'hpy.debug', 'hpy.trace']
include-package-data = true

[tool.ruff]
include = ["hpy"]
extend-exclude = [
    "docs",
    "test",
    "proof-of-concept",
    "microbench",
    "hpy/devel",
    "hpy/debug",
]
line-length = 80
target-version = "py38"

[tool.ruff.lint]
select = [
    "F",
    "E",
    "I",
    "UP",
    "YTT",
    "ANN",
    "S",
    "BLE",
    "B",
    "A",
    "COM",
    "C4",
    "DTZ",
    "EM",
    "ISC",
    "G",
    "INP",
    "PIE",
    "T20",
    "PYI",
    "RSE",
    "RET",
    "SIM",
    "TID",
    "PTH",
    "ERA",
    "PD",
    "PL",
    "TRY",
    "NPY",
    "RUF",
]
extend-ignore = [
    "G002",    # Erroneous issue with %-logging when logging can be configured for % logging.
    "S101",    # Use of assert here is a known quantity. Blame typing memes.
    "PLR2004", # Magic value comparison.
    "SIM105",  # Suppressable exception. contextlib.suppress is a stylistic choice with overhead.
    "C90",     # McCabe complexity memes.
    "PLR0913", # Some functions require more than 5 arguments.
    "ANN101",  # Typing of Self for self is implicit.
    "ANN102",  # Typing of type[Self] for cls is implicit.
    "ANN204",  # Special method return types are known or implicit.
    "ERA001",  # Leave commented-out code alone.
    # Recommended by ruff when using ruff format.
    "E111",
    "E114",
    "E117",
    "Q003",
    "COM812",
    "COM819",
    "E501",
    "ISC001",
    "ISC002",
]
unfixable = [
    "ERA", # I don't want anything erroneously detected deleted by this.
]

[tool.ruff.lint.isort]
combine-as-imports = true

[tool.ruff.lint.pyupgrade]
keep-runtime-typing = true

[tool.ruff.format]
quote-style = "preserve"

[tool.pyright]
include = ["hpy"]
ignore = ["docs", "test", "proof-of-concept", "microbench"]
pythonVersion = "3.8"
typeCheckingMode = "strict"

reportTypeCommentUsage = "none"                # Needed for python 2.7 compatibility in hpy/devel/*.py
reportMissingTypeStubs = "warning"             # setuptools_scm isn't fully type-annotated.
reportPrivateUsage = "warning"
reportCallInDefaultInitializer = "warning"
reportUnnecessaryTypeIgnoreComment = "warning"
